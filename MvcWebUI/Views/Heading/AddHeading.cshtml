@using EntityLayer.Concrete
@model Heading
@{
    ViewBag.Title = "Başlık Ekleme";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@section css
    {
    <link rel="stylesheet" href="~/AdminLTE-3.0.4//plugins/select2/css/select2.min.css">
    <link rel="stylesheet" href="~/AdminLTE-3.0.4//plugins/select2-bootstrap4-theme/select2-bootstrap4.min.css">
}


<section class="content-header">
    <h2 class="text-center"></h2>
</section>
<section class="content">
    <div class="container-fluid">
        <div class="card col-8">
            <div class="card-header">
                <h3 class="text-center text-bold">Başlık Ekleme Formu</h3>
            </div>
            <div class="card-body">
                @using (Html.BeginForm("AddHeading", "Heading", FormMethod.Post))
                {
                    <div class="row">
                        <div class="col">
                            <div class="form-group">
                                @Html.LabelFor(x => x.HeadingName, "Başlık", new { @class = "form-label" })
                                @Html.TextBoxFor(x => x.HeadingName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(x => x.HeadingName, null, new { @class = "alert-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <div class="form-group">
                                @Html.LabelFor(x => x.CategoryID, "Kategori", new { @class = "form-label" })
                                @Html.DropDownListFor(x => x.CategoryID, (List<SelectListItem>)ViewBag.CategoryList, new { @class = "form-control" })

                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <div class="form-group">
                                @Html.LabelFor(x => x.WriterID, "Yazar", new { @class = "form-label" })
                                @Html.DropDownListFor(x => x.WriterID, (List<SelectListItem>)ViewBag.WriterList, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <div class="form-group">
                                <button type="submit" class="btn btn-success float-right">Kaydet</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

    </div>
</section>
@section scripts
    {
    $(function () {
    //Initialize Select2 Elements
    $('.select2').select2()

    //Initialize Select2 Elements
    $('.select2bs4').select2({
    theme: 'bootstrap4'
    })

    //Datemask dd/mm/yyyy
    $('#datemask').inputmask('dd/mm/yyyy', { 'placeholder': 'dd/mm/yyyy' })
    //Datemask2 mm/dd/yyyy
    $('#datemask2').inputmask('mm/dd/yyyy', { 'placeholder': 'mm/dd/yyyy' })
    //Money Euro
    $('[data-mask]').inputmask()

    //Date range picker
    $('#reservation').daterangepicker()
    //Date range picker with time picker
    $('#reservationtime').daterangepicker({
    timePicker: true,
    timePickerIncrement: 30,
    locale: {
    format: 'MM/DD/YYYY hh:mm A'
    }
    })
    //Date range as a button
    $('#daterange-btn').daterangepicker(
    {
    ranges   : {
    'Today'       : [moment(), moment()],
    'Yesterday'   : [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
    'Last 7 Days' : [moment().subtract(6, 'days'), moment()],
    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
    'This Month'  : [moment().startOf('month'), moment().endOf('month')],
    'Last Month'  : [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
    },
    startDate: moment().subtract(29, 'days'),
    endDate  : moment()
    },
    function (start, end) {
    $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'))
    }
    )

    //Timepicker
    $('#timepicker').datetimepicker({
    format: 'LT'
    })

    //Bootstrap Duallistbox
    $('.duallistbox').bootstrapDualListbox()

    //Colorpicker
    $('.my-colorpicker1').colorpicker()
    //color picker with addon
    $('.my-colorpicker2').colorpicker()

    $('.my-colorpicker2').on('colorpickerChange', function(event) {
    $('.my-colorpicker2 .fa-square').css('color', event.color.toString());
    });

    $("input[data-bootstrap-switch]").each(function(){
    $(this).bootstrapSwitch('state', $(this).prop('checked'));
    });

    })
}




